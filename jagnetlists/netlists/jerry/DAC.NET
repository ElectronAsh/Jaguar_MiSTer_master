(*****************************************************************

	dac.net

This module contains the audio DAC logic in Jerry
the DACs use 2's complement numbers

******************************************************************)

IMPORT 	tosh,		(* Toshiba gate & pad definitions *)
	lego;


DEF 	DAC	(resetl,clk,dac1w,dac2w,tint[0],ts,
		dspd[0..15] :IN;

		rdac[0..1],ldac[0..1]:IO);

		INT8/p:IO;
BEGIN

/* buffer the DAC write data */

Dl1[2-15] :=	SLATCHC (dl1[2-15],dspd[2-15],clk,dac1w,resetl); /* left */
Dr1[2-15] :=	SLATCHC (dr1[2-15],dspd[2-15],clk,dac2w,resetl); /* right */

Dspdu[0-1] :=	DUMMY (dspd[0-1]);

/* transfer to output registers */

Dl2[2-15] :=    SLATCHC (dl2[2-15],dl1[2-15],clk,tint[0],resetl);
Dr2[2-15] :=    SLATCHC (dr2[2-15],dr1[2-15],clk,tint[0],resetl);

/*
 an eight bit down counter is reloaded with 128 by ts and counts
 down to 255 then stops
*/

Pi[0] :=	DNCNT (pi[0],pco[0],gnd,clk,go,ts,resetl);
Pi[1-6] :=	DNCNT (pi[1-6],pco[1-6],gnd,clk,pco[0-5],ts,resetl);
Pi[7] :=	DNCNT (pi[7],pco[7],vcc,clk,pco[6],ts,resetl);
Pco[7] :=	DUMMY (pco[7]);
Gnd :=		TIE0 (gnd);
Vcc :=		TIE1 (vcc);
P[0-7] :=	NIVM (p[0-7],pi[0-7]);

P :=		JOIN (p,p[0..7]);
Pu :=		DUMMY (p);

/* stop the counter when two msbs are set */

Go :=		ND2 (go,p[6..7]);
Stop :=		IV (stop,go);

/*
 the four DAC outputs are generated by identical modules
 but a[15] is inverted for two's complement output
*/

Ldac[0] :=	PULSE (p[0..7],dl2[2..8],stop,clk,resetl,ldac[0]);
Ldac[1] :=	PULSE (p[0..7],dl2[9..14],dli[15],stop,clk,resetl,ldac[1]);
Rdac[0] :=	PULSE (p[0..7],dr2[2..8],stop,clk,resetl,rdac[0]);
Rdac[1] :=	PULSE (p[0..7],dr2[9..14],dri[15],stop,clk,resetl,rdac[1]);

Dli[15] :=	IV (dli[15],dl2[15]);
Dri[15] :=	IV (dri[15],dr2[15]);

END;

/* PULSE - DAC pulse Generator
   -----------------------------
*/

DEF PULSE (
	a[0..7],b[0..6],stop,clk,resetl:IN;
	pulse:OUT);

BEGIN

/* compare the two values (no match if a >= 128) */

Ab[0-6] :=	EN (ab[0-6],a[0-6],b[0-6]);
Ab[7] :=	IV (ab[7],a[7]);
Startl :=	ND8 (startl,ab[0..7]);
Start :=	IV (start,startl);

Pulse :=	FJK2 (pulse,pulsel,start,stop,clk,resetl);
Pulsel :=	DUMMY (pulsel);

END;


